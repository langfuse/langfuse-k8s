# This is the values.yaml file for deploying Langfuse in GKE
# 
# All the secrets have been saved in kubernetes.
# You can see all the secrets by running:
#   k get secrets -n langfuse --context gke_xai-research_us-east4_ic-staging
# 
# To upgrade deployment, run:
#   helm repo add langfuse https://langfuse.github.io/langfuse-k8s
#   helm repo update
#   helm upgrade langfuse langfuse/langfuse -n langfuse -f <path_to_this_file>


replicaCount: 1

image:
  repository: langfuse/langfuse
  pullPolicy: Always
  tag: 3

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

langfuse:
  port: 3000
  nodeEnv: production
  next:
    healthcheckBasePath: ""
  nextauth:
    url: http://34.102.137.1:80
  telemetryEnabled: False
  nextPublicSignUpDisabled: False
  enableExperimentalFeatures: False
  extraContainers: []
  extraVolumes: []
  extraInitContainers: []
  extraVolumeMounts: []

  web:
    hpa:
      enabled: true
      minReplicas: 1
      maxReplicas: 4
      targetCPUUtilizationPercentage: 50
    vpa:
      enabled: true
      controlledResources: ["cpu", "memory"]
      maxAllowed:
        cpu: "4"
        memory: "4Gi"
      minAllowed:
        cpu: "100m"
        memory: "512Mi"
      updatePolicy:
        updateMode: Auto

  worker:
    hpa:
      enabled: true
      minReplicas: 1
      maxReplicas: 4
      targetCPUUtilizationPercentage: 50
    vpa:
      enabled: true
      controlledResources: ["cpu", "memory"]
      maxAllowed:
        cpu: "4"
        memory: "4Gi"
      minAllowed:
        cpu: "100m"
        memory: "512Mi"
      updatePolicy:
        updateMode: Auto
  
  additionalEnv:
    - name: LANGFUSE_LOG_LEVEL
      value: info
    - name: LANGFUSE_LOG_FORMAT
      value: json
    # CLICKHOUSE
    - name: "CLICKHOUSE_MIGRATION_URL"
      value: "clickhouse://langfuse-clickhouse:9000"
    - name: "CLICKHOUSE_URL"
      value: "http://langfuse-clickhouse:8123"
    - name: "CLICKHOUSE_USER"
      value: "default"
    # S3 / MinIO
    - name: "LANGFUSE_S3_EVENT_UPLOAD_ENABLED"
      value: "true"
    - name: "LANGFUSE_S3_EVENT_UPLOAD_BUCKET"
      value: "langfuse"
    - name: "LANGFUSE_S3_EVENT_UPLOAD_REGION"
      value: "auto"
    - name: "LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID"
      value: "minio"
    - name: "LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT"
      value: "http://langfuse-minio:9000"
    - name: "LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE"
      value: "true"
    - name: "LANGFUSE_DEFAULT_ORG_ID"
      value: "cm5d9p20800036y1qkv26lzaf"
    - name: "LANGFUSE_DEFAULT_ORG_ROLE"
      value: "ADMIN"
    - name: "LANGFUSE_DEFAULT_PROJECT_ID"
      value: "cm5d9pm3x00086y1qdzyenl8l"
    - name: "LANGFUSE_DEFAULT_PROJECT_ROLE"
      value: "ADMIN"    
    - name: "AUTH_DISABLE_USERNAME_PASSWORD"
      value: "true"
    - name: "AUTH_OKTA_CLIENT_ID"
      value: "0oa1tneab9qMtXZXn1d8"
    - name: "AUTH_OKTA_ISSUER"
      value: "https://xai.okta.com/"


serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: true
  className: "gce"
  namespace: "langfuse"
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "xai-langfuse-ip"
    kubernetes.io/ingress.allow-http: "false"
  tls:
    - secretName: "langfuse-tls"
      hosts:
        - "34.102.137.1"
  hosts:
    - host: ""
      paths:
        - path: "/"
          pathType: "Prefix"


resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  host: langfuse-postgresql
  auth:
    username: postgres
    database: postgres_langfuse
  deploy: true
  architecture: standalone
  primary:
    service:
      ports:
        postgresql: 5432

clickhouse:
  deploy: true
  shards: 1 # Langfuse does not support multi-shard clusters.
  replicaCount: 3
  resourcesPreset: large

valkey:
  deploy: true
  architecture: standalone
  primary:
    extraFlags:
      - "--maxmemory-policy noeviction"

minio:
  deploy: true
  defaultBuckets: 'langfuse'

extraManifests: []
